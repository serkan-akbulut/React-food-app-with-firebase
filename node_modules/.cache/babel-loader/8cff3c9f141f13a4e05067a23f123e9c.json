{"ast":null,"code":"var _jsxFileName = \"/Users/serkan/Downloads/react-complete-guide-code-17-practice-food-order-http-forms/code/02-fetching-meals-via-http/src/components/Cart/CheckOut.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./CheckOut.module.css\";\nimport useInput from \"../../hooks/use-input\";\nimport FormInput from \"../UI/FormInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst isCity = value => value.trim().length > 5;\n\nconst CheckOut = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    blurChangeHandler: nameBlurChangeHandler,\n    isvalid: firstNameIsValid,\n    reset: resetName,\n    hasError: nameHasError\n  } = useInput(isNotEmpty());\n  const {\n    value: enteredStreet,\n    valueChangeHandler: streetChangeHandler,\n    blurChangeHandler: streetBlurChangeHandler,\n    isvalid: streetIsValid,\n    reset: resetStreet,\n    hasError: streetHasError\n  } = useInput(isNotEmpty());\n  const {\n    value: enteredPostal,\n    valueChangeHandler: postalChangeHandler,\n    blurChangeHandler: postalBlurChangeHandler,\n    isvalid: postalIsValid,\n    reset: resetPostal,\n    hasError: PostalHasError\n  } = useInput(isNotEmpty());\n  const {\n    value: enteredCity,\n    valueChangeHandler: cityChangeHandler,\n    blurChangeHandler: cityBlurChangeHandler,\n    isvalid: cityIsValid,\n    reset: resetCity,\n    hasError: cityHasError\n  } = useInput(isCity());\n  let formIsValid = false;\n\n  if (firstNameIsValid && streetIsValid && cityIsValid && postalIsValid) {\n    formIsValid = true;\n  }\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    resetName();\n    resetCity();\n    resetPostal();\n    resetStreet();\n  };\n\n  const nameClass = nameHasError ? 'form-control invalid' : 'form-control';\n  const streetClass = streetHasError ? 'form-control invalid' : 'form-control';\n  const postalClass = PostalHasError ? 'form-control invalid' : 'form-control';\n  const cityClass = cityHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormInput, {\n      label: \"name\",\n      labelContent: \"Your Name\",\n      className: nameClass,\n      onChange: nameChangeHandler,\n      onBlur: nameBlurChangeHandler,\n      value: enteredName,\n      type: \"text\",\n      id: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      label: \"street\",\n      labelContent: \"Street\",\n      className: streetClass,\n      onChange: streetChangeHandler,\n      onBlur: streetBlurChangeHandler,\n      value: enteredStreet,\n      type: \"text\",\n      id: \"street\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      label: \"postal\",\n      labelContent: \"Postal Code\",\n      className: postalClass,\n      onChange: postalChangeHandler,\n      onBlur: postalBlurChangeHandler,\n      value: enteredPostal,\n      type: \"text\",\n      id: \"postal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      label: \"city\",\n      labelContent: \"City\",\n      className: cityClass,\n      onChange: cityChangeHandler,\n      onBlur: cityBlurChangeHandler,\n      value: enteredCity,\n      type: \"text\",\n      id: \"city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckOut, \"P99HGquxz4DX9ncZjglQcTL54WQ=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = CheckOut;\nexport default CheckOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckOut\");","map":{"version":3,"names":["classes","useInput","FormInput","isNotEmpty","value","trim","isCity","length","CheckOut","props","enteredName","valueChangeHandler","nameChangeHandler","blurChangeHandler","nameBlurChangeHandler","isvalid","firstNameIsValid","reset","resetName","hasError","nameHasError","enteredStreet","streetChangeHandler","streetBlurChangeHandler","streetIsValid","resetStreet","streetHasError","enteredPostal","postalChangeHandler","postalBlurChangeHandler","postalIsValid","resetPostal","PostalHasError","enteredCity","cityChangeHandler","cityBlurChangeHandler","cityIsValid","resetCity","cityHasError","formIsValid","confirmHandler","event","preventDefault","nameClass","streetClass","postalClass","cityClass","form","actions","onCancel","submit"],"sources":["/Users/serkan/Downloads/react-complete-guide-code-17-practice-food-order-http-forms/code/02-fetching-meals-via-http/src/components/Cart/CheckOut.js"],"sourcesContent":["import classes from \"./CheckOut.module.css\";\nimport useInput from \"../../hooks/use-input\";\n\nimport FormInput from \"../UI/FormInput\";\n\nconst isNotEmpty = (value) => value.trim() !== '';\nconst isCity = (value) => value.trim().length>5;\n\nconst CheckOut = (props) => {\n  const {\n    value:enteredName,\n    valueChangeHandler: nameChangeHandler,\n    blurChangeHandler: nameBlurChangeHandler,\n    isvalid:firstNameIsValid,\n    reset:resetName,\n    hasError:nameHasError\n\n  } = useInput(isNotEmpty());\n\n  const {\n    value:enteredStreet,\n    valueChangeHandler: streetChangeHandler,\n    blurChangeHandler: streetBlurChangeHandler,\n    isvalid:streetIsValid,\n    reset:resetStreet,\n    hasError:streetHasError\n\n  } = useInput(isNotEmpty());\n  const {\n    value:enteredPostal,\n    valueChangeHandler: postalChangeHandler,\n    blurChangeHandler: postalBlurChangeHandler,\n    isvalid:postalIsValid,\n    reset:resetPostal,\n    hasError:PostalHasError\n\n  } = useInput(isNotEmpty());\n  const {\n    value:enteredCity,\n    valueChangeHandler: cityChangeHandler,\n    blurChangeHandler: cityBlurChangeHandler,\n    isvalid:cityIsValid,\n    reset:resetCity,\n    hasError:cityHasError\n\n  } = useInput(isCity());\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && streetIsValid && cityIsValid && postalIsValid) {\n    formIsValid = true;\n  }\n\n\n  const confirmHandler = (event) => {\n\n    event.preventDefault();\n    \n    resetName();\n    resetCity();\n    resetPostal();\n    resetStreet();\n  };\n\n  const nameClass= nameHasError ?'form-control invalid' : 'form-control';\n  const streetClass= streetHasError ?'form-control invalid' : 'form-control';\n  const postalClass= PostalHasError ?'form-control invalid' : 'form-control';\n  const cityClass= cityHasError ?'form-control invalid' : 'form-control';\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <FormInput\n        label={\"name\"}\n        labelContent={\"Your Name\"}\n        className={nameClass}\n        onChange={nameChangeHandler}\n        onBlur={nameBlurChangeHandler}\n        value={enteredName}\n        type={\"text\"}\n        id={\"name\"}\n      ></FormInput>\n        <FormInput\n        label={\"street\"}\n        labelContent={\"Street\"}\n        className={streetClass}\n        onChange={streetChangeHandler}\n        onBlur={streetBlurChangeHandler}\n        value={enteredStreet}\n        type={\"text\"}\n        id={\"street\"}\n      ></FormInput>\n       <FormInput\n        label={\"postal\"}\n        labelContent={\"Postal Code\"}\n        className={postalClass}\n        onChange={postalChangeHandler}\n        onBlur={postalBlurChangeHandler}\n        value={enteredPostal}\n        type={\"text\"}\n        id={\"postal\"}\n      ></FormInput>\n        <FormInput\n        label={\"city\"}\n        labelContent={\"City\"}\n        className={cityClass}\n        onChange={cityChangeHandler}\n        onBlur={cityBlurChangeHandler}\n        value={enteredCity}\n        type={\"text\"}\n        id={\"city\"}\n      ></FormInput>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\nexport default CheckOut;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}