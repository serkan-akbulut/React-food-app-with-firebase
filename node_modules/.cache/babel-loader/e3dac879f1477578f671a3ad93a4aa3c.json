{"ast":null,"code":"var _jsxFileName = \"/Users/serkan/Downloads/react-complete-guide-code-17-practice-food-order-http-forms/code/02-fetching-meals-via-http/src/components/Cart/CheckOut.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./CheckOut.module.css\";\nimport useInput from \"../../hooks/use-input\";\nimport FormInput from \"../UI/FormInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => (value === null || value === void 0 ? void 0 : value.trim()) !== \"\";\n\nconst isCity = value => (value === null || value === void 0 ? void 0 : value.trim().length) > 5;\n\nconst CheckOut = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    blurChangeHandler: nameBlurChangeHandler,\n    isvalid: firstNameIsValid,\n    reset: resetName,\n    hasError: nameHasError\n  } = useInput(isNotEmpty());\n  const {\n    value: enteredStreet,\n    valueChangeHandler: streetChangeHandler,\n    blurChangeHandler: streetBlurChangeHandler,\n    isvalid: streetIsValid,\n    reset: resetStreet,\n    hasError: streetHasError\n  } = useInput(isNotEmpty());\n  const {\n    value: enteredPostal,\n    valueChangeHandler: postalChangeHandler,\n    blurChangeHandler: postalBlurChangeHandler,\n    isvalid: postalIsValid,\n    reset: resetPostal,\n    hasError: PostalHasError\n  } = useInput(isNotEmpty());\n  const {\n    value: enteredCity,\n    valueChangeHandler: cityChangeHandler,\n    blurChangeHandler: cityBlurChangeHandler,\n    isvalid: cityIsValid,\n    reset: resetCity,\n    hasError: cityHasError\n  } = useInput(isCity());\n  let formIsValid = false;\n\n  if (firstNameIsValid && streetIsValid && cityIsValid && postalIsValid) {\n    formIsValid = true;\n  }\n\n  const confirmHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    resetName();\n    resetCity();\n    resetPostal();\n    resetStreet();\n  };\n\n  const nameClass = nameHasError ? \"form-control invalid\" : \"form-control\";\n  const streetClass = streetHasError ? \"form-control invalid\" : \"form-control\";\n  const postalClass = PostalHasError ? \"form-control invalid\" : \"form-control\";\n  const cityClass = cityHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormInput, {\n      label: \"name\",\n      labelContent: \"Your Name\",\n      className: nameClass,\n      onChange: nameChangeHandler,\n      onBlur: nameBlurChangeHandler,\n      value: enteredName,\n      type: \"text\",\n      id: \"name\",\n      error: nameHasError,\n      errorMessage: \"Please enter a  name.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      label: \"street\",\n      labelContent: \"Street\",\n      className: streetClass,\n      onChange: streetChangeHandler,\n      onBlur: streetBlurChangeHandler,\n      value: enteredStreet,\n      type: \"text\",\n      id: \"street\",\n      error: streetHasError,\n      errorMessage: \"Please enter a street.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      label: \"postal\",\n      labelContent: \"Postal Code\",\n      className: postalClass,\n      onChange: postalChangeHandler,\n      onBlur: postalBlurChangeHandler,\n      value: enteredPostal,\n      type: \"text\",\n      id: \"postal\",\n      error: PostalHasError,\n      errorMessage: \"Please enter a postal.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      label: \"city\",\n      labelContent: \"City\",\n      className: cityClass,\n      onChange: cityChangeHandler,\n      onBlur: cityBlurChangeHandler,\n      value: enteredCity,\n      type: \"text\",\n      id: \"city\",\n      error: cityHasError,\n      errorMessage: \"Please enter a city name.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckOut, \"0KT/yMhb6HQ8KzYebZX+EzsvIgg=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = CheckOut;\nexport default CheckOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckOut\");","map":{"version":3,"names":["classes","useInput","FormInput","isNotEmpty","value","trim","isCity","length","CheckOut","props","enteredName","valueChangeHandler","nameChangeHandler","blurChangeHandler","nameBlurChangeHandler","isvalid","firstNameIsValid","reset","resetName","hasError","nameHasError","enteredStreet","streetChangeHandler","streetBlurChangeHandler","streetIsValid","resetStreet","streetHasError","enteredPostal","postalChangeHandler","postalBlurChangeHandler","postalIsValid","resetPostal","PostalHasError","enteredCity","cityChangeHandler","cityBlurChangeHandler","cityIsValid","resetCity","cityHasError","formIsValid","confirmHandler","event","preventDefault","nameClass","streetClass","postalClass","cityClass","form","actions","onCancel","submit"],"sources":["/Users/serkan/Downloads/react-complete-guide-code-17-practice-food-order-http-forms/code/02-fetching-meals-via-http/src/components/Cart/CheckOut.js"],"sourcesContent":["import classes from \"./CheckOut.module.css\";\nimport useInput from \"../../hooks/use-input\";\n\nimport FormInput from \"../UI/FormInput\";\n\nconst isNotEmpty = (value) => value?.trim() !== \"\";\nconst isCity = (value) => value?.trim().length > 5;\n\nconst CheckOut = (props) => {\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    blurChangeHandler: nameBlurChangeHandler,\n    isvalid: firstNameIsValid,\n    reset: resetName,\n    hasError: nameHasError,\n  } = useInput(isNotEmpty());\n\n  const {\n    value: enteredStreet,\n    valueChangeHandler: streetChangeHandler,\n    blurChangeHandler: streetBlurChangeHandler,\n    isvalid: streetIsValid,\n    reset: resetStreet,\n    hasError: streetHasError,\n  } = useInput(isNotEmpty());\n  const {\n    value: enteredPostal,\n    valueChangeHandler: postalChangeHandler,\n    blurChangeHandler: postalBlurChangeHandler,\n    isvalid: postalIsValid,\n    reset: resetPostal,\n    hasError: PostalHasError,\n  } = useInput(isNotEmpty());\n  const {\n    value: enteredCity,\n    valueChangeHandler: cityChangeHandler,\n    blurChangeHandler: cityBlurChangeHandler,\n    isvalid: cityIsValid,\n    reset: resetCity,\n    hasError: cityHasError,\n  } = useInput(isCity());\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && streetIsValid && cityIsValid && postalIsValid) {\n    formIsValid = true;\n  }\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n        return;\n      }\n\n    resetName();\n    resetCity();\n    resetPostal();\n    resetStreet();\n  };\n\n  const nameClass = nameHasError ? \"form-control invalid\" : \"form-control\";\n  const streetClass = streetHasError ? \"form-control invalid\" : \"form-control\";\n  const postalClass = PostalHasError ? \"form-control invalid\" : \"form-control\";\n  const cityClass = cityHasError ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <FormInput\n        label={\"name\"}\n        labelContent={\"Your Name\"}\n        className={nameClass}\n        onChange={nameChangeHandler}\n        onBlur={nameBlurChangeHandler}\n        value={enteredName}\n        type={\"text\"}\n        id={\"name\"}\n        error={nameHasError}\n        errorMessage={\"Please enter a  name.\"}\n      ></FormInput>\n      <FormInput\n        label={\"street\"}\n        labelContent={\"Street\"}\n        className={streetClass}\n        onChange={streetChangeHandler}\n        onBlur={streetBlurChangeHandler}\n        value={enteredStreet}\n        type={\"text\"}\n        id={\"street\"}\n        error={streetHasError}\n        errorMessage={\"Please enter a street.\"}\n      ></FormInput>\n       \n      <FormInput\n        label={\"postal\"}\n        labelContent={\"Postal Code\"}\n        className={postalClass}\n        onChange={postalChangeHandler}\n        onBlur={postalBlurChangeHandler}\n        value={enteredPostal}\n        type={\"text\"}\n        id={\"postal\"}\n        error={PostalHasError}\n        errorMessage={\"Please enter a postal.\"}\n      ></FormInput>\n      <FormInput\n        label={\"city\"}\n        labelContent={\"City\"}\n        className={cityClass}\n        onChange={cityChangeHandler}\n        onBlur={cityBlurChangeHandler}\n        value={enteredCity}\n        type={\"text\"}\n        id={\"city\"}\n        error={cityHasError}\n        errorMessage={\"Please enter a city name.\"}\n      ></FormInput>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\nexport default CheckOut;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}