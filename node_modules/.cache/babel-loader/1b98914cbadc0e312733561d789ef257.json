{"ast":null,"code":"var _jsxFileName = \"/Users/serkan/Downloads/react-complete-guide-code-17-practice-food-order-http-forms/code/02-fetching-meals-via-http/src/components/Cart/CheckOut.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./CheckOut.module.css\";\nimport useInput from \"../../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => (value === null || value === void 0 ? void 0 : value.trim()) !== \"\";\n\nconst isCity = value => (value === null || value === void 0 ? void 0 : value.trim().length) > 5;\n\nconst CheckOut = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    blurChangeHandler: nameBlurChangeHandler,\n    isvalid: firstNameIsValid,\n    reset: resetName,\n    hasError: nameHasError\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredStreet,\n    valueChangeHandler: streetChangeHandler,\n    blurChangeHandler: streetBlurChangeHandler,\n    isvalid: streetIsValid,\n    reset: resetStreet,\n    hasError: streetHasError\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredPostal,\n    valueChangeHandler: postalChangeHandler,\n    blurChangeHandler: postalBlurChangeHandler,\n    isvalid: postalIsValid,\n    reset: resetPostal,\n    hasError: PostalHasError\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredCity,\n    valueChangeHandler: cityChangeHandler,\n    blurChangeHandler: cityBlurChangeHandler,\n    isvalid: cityIsValid,\n    reset: resetCity,\n    hasError: cityHasError\n  } = useInput(isCity);\n  let formIsValid = false;\n\n  if (firstNameIsValid && streetIsValid && cityIsValid && postalIsValid) {\n    formIsValid = true;\n  }\n\n  const confirmHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    resetName();\n    resetCity();\n    resetPostal();\n    resetStreet();\n  };\n\n  const nameClass = nameHasError ? `${classes.invalid}` : '';\n  const streetClass = streetHasError ? `${classes.invalid}` : '';\n  const postalClass = PostalHasError ? `${classes.invalid}` : '';\n  const cityClass = cityHasError ? `${classes.invalid}` : '';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${nameClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameChangeHandler,\n        onBlur: nameBlurChangeHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please enter a name.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${streetClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: streetChangeHandler,\n        onBlur: streetBlurChangeHandler,\n        value: enteredStreet,\n        type: \"text\",\n        id: \"street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), streetHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please enter a street.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${postalClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: postalChangeHandler,\n        onBlur: postalBlurChangeHandler,\n        value: enteredPostal,\n        type: \"text\",\n        id: \"postal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), PostalHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please enter a postal.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${cityClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: cityChangeHandler,\n        onBlur: cityBlurChangeHandler,\n        value: enteredCity,\n        type: \"text\",\n        id: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), cityHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please enter a city name.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckOut, \"0KT/yMhb6HQ8KzYebZX+EzsvIgg=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = CheckOut;\nexport default CheckOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckOut\");","map":{"version":3,"names":["classes","useInput","isNotEmpty","value","trim","isCity","length","CheckOut","props","enteredName","valueChangeHandler","nameChangeHandler","blurChangeHandler","nameBlurChangeHandler","isvalid","firstNameIsValid","reset","resetName","hasError","nameHasError","enteredStreet","streetChangeHandler","streetBlurChangeHandler","streetIsValid","resetStreet","streetHasError","enteredPostal","postalChangeHandler","postalBlurChangeHandler","postalIsValid","resetPostal","PostalHasError","enteredCity","cityChangeHandler","cityBlurChangeHandler","cityIsValid","resetCity","cityHasError","formIsValid","confirmHandler","event","preventDefault","nameClass","invalid","streetClass","postalClass","cityClass","form","control","actions","onCancel","submit"],"sources":["/Users/serkan/Downloads/react-complete-guide-code-17-practice-food-order-http-forms/code/02-fetching-meals-via-http/src/components/Cart/CheckOut.js"],"sourcesContent":["import classes from \"./CheckOut.module.css\";\nimport useInput from \"../../hooks/use-input\";\n\n\nconst isNotEmpty = (value) => value?.trim() !== \"\";\nconst isCity = (value) => value?.trim().length > 5;\n\nconst CheckOut = (props) => {\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    blurChangeHandler: nameBlurChangeHandler,\n    isvalid: firstNameIsValid,\n    reset: resetName,\n    hasError: nameHasError,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredStreet,\n    valueChangeHandler: streetChangeHandler,\n    blurChangeHandler: streetBlurChangeHandler,\n    isvalid: streetIsValid,\n    reset: resetStreet,\n    hasError: streetHasError,\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredPostal,\n    valueChangeHandler: postalChangeHandler,\n    blurChangeHandler: postalBlurChangeHandler,\n    isvalid: postalIsValid,\n    reset: resetPostal,\n    hasError: PostalHasError,\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredCity,\n    valueChangeHandler: cityChangeHandler,\n    blurChangeHandler: cityBlurChangeHandler,\n    isvalid: cityIsValid,\n    reset: resetCity,\n    hasError: cityHasError,\n  } = useInput(isCity);\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && streetIsValid && cityIsValid && postalIsValid) {\n    formIsValid = true;\n  }\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    resetName();\n    resetCity();\n    resetPostal();\n    resetStreet();\n  };\n\n  const nameClass = nameHasError ? `${classes.invalid}` : '';\n  const streetClass = streetHasError ? `${classes.invalid}` : '';\n  const postalClass = PostalHasError ? `${classes.invalid}` : '';\n  const cityClass = cityHasError ? `${classes.invalid}` : '';\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n        <div className={`${classes.control} ${nameClass}`}>\n          <label htmlFor={\"name\"}>Your Name</label>\n          <input\n            onChange={nameChangeHandler}\n            onBlur={nameBlurChangeHandler}\n            value={enteredName}\n            type=\"text\"\n            id=\"name\"\n          />\n        </div>\n        {nameHasError && <p className=\"error-text\">Please enter a name.</p>}\n\n        <div className={`${classes.control} ${streetClass}`}>\n          <label htmlFor={\"street\"}>Street</label>\n          <input\n            onChange={streetChangeHandler}\n            onBlur={streetBlurChangeHandler}\n            value={enteredStreet}\n            type=\"text\"\n            id=\"street\"\n          />\n        </div>\n        {streetHasError && <p className=\"error-text\">Please enter a street.</p>}\n\n        <div className={`${classes.control} ${postalClass}`}>\n          <label htmlFor={\"postal\"}>Postal Code</label>\n          <input\n            onChange={postalChangeHandler}\n            onBlur={postalBlurChangeHandler}\n            value={enteredPostal}\n            type=\"text\"\n            id=\"postal\"\n          />\n        </div>\n        {PostalHasError && <p className=\"error-text\">Please enter a postal.</p>}\n\n        <div className={`${classes.control} ${cityClass}`}>\n          <label htmlFor={\"city\"}>City</label>\n          <input\n            onChange={cityChangeHandler}\n            onBlur={cityBlurChangeHandler}\n            value={enteredCity}\n            type=\"text\"\n            id=\"city\"\n          />\n        </div>\n        {cityHasError && (\n          <p className=\"error-text\">Please enter a city name.</p>\n        )}\n\n        <div className={classes.actions}>\n          <button type=\"button\" onClick={props.onCancel}>\n            Cancel\n          </button>\n          <button className={classes.submit}>Confirm</button>\n        </div>\n     \n    </form>\n  );\n};\nexport default CheckOut;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}